{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krishan kant\\\\Desktop\\\\Js\\\\chess\\\\frontend\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport socket from '../socket';\nimport Board from './Board';\nimport Chat from './Chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Room({\n  username,\n  roomId\n}) {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [turn, setTurn] = useState('X');\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState(null);\n  useEffect(() => {\n    socket.connect();\n    socket.emit('join_room', {\n      roomId,\n      username\n    });\n    socket.on('room_full', () => {\n      alert('Room is full!');\n    });\n    socket.on('room_data', data => {\n      setPlayers(data.players);\n      setBoard(data.board);\n      setTurn(data.turn);\n      setGameOver(false);\n      setWinner(null);\n    });\n    socket.on('board_update', ({\n      board,\n      turn\n    }) => {\n      setBoard(board);\n      setTurn(turn);\n    });\n    socket.on('game_over', ({\n      winner\n    }) => {\n      setGameOver(true);\n      setWinner(winner);\n    });\n    socket.on('player_left', () => {\n      alert('Opponent left the room. Game over.');\n      setGameOver(true);\n      setWinner(null);\n      setBoard(Array(9).fill(null));\n      setPlayers([]);\n    });\n    return () => {\n      socket.disconnect();\n      setPlayers([]);\n      setBoard(Array(9).fill(null));\n      setGameOver(false);\n      setWinner(null);\n    };\n  }, [roomId, username]);\n  const makeMove = index => {\n    if (gameOver || board[index] !== null) return;\n    const player = players.find(p => p.username === username);\n    if (!player) return;\n    if (turn !== player.symbol) return; // Not this player's turn\n\n    socket.emit('make_move', {\n      roomId,\n      index\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      padding: 20,\n      gap: 40\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Room: \", roomId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Players:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: players.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [p.username, \" (\", p.symbol, \")\"]\n        }, p.username, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Board, {\n        board: board,\n        onCellClick: makeMove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: winner ? `Game Over! Winner: ${winner}` : 'Game Over! It\\'s a draw!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Turn: \", turn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chat, {\n      roomId: roomId,\n      username: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(Room, \"y3/dDRklGOwWRheSW499GG/cBlc=\");\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useState","socket","Board","Chat","jsxDEV","_jsxDEV","Room","username","roomId","_s","players","setPlayers","board","setBoard","Array","fill","turn","setTurn","gameOver","setGameOver","winner","setWinner","connect","emit","on","alert","data","disconnect","makeMove","index","player","find","p","symbol","style","display","padding","gap","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onCellClick","_c","$RefreshReg$"],"sources":["C:/Users/krishan kant/Desktop/Js/chess/frontend/src/components/Room.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport socket from '../socket';\r\nimport Board from './Board';\r\nimport Chat from './Chat';\r\n\r\nfunction Room({ username, roomId }) {\r\n  const [players, setPlayers] = useState([]);\r\n  const [board, setBoard] = useState(Array(9).fill(null));\r\n  const [turn, setTurn] = useState('X');\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [winner, setWinner] = useState(null);\r\n\r\n  useEffect(() => {\r\n    socket.connect();\r\n\r\n    socket.emit('join_room', { roomId, username });\r\n\r\n    socket.on('room_full', () => {\r\n      alert('Room is full!');\r\n    });\r\n\r\n    socket.on('room_data', (data) => {\r\n      setPlayers(data.players);\r\n      setBoard(data.board);\r\n      setTurn(data.turn);\r\n      setGameOver(false);\r\n      setWinner(null);\r\n    });\r\n\r\n    socket.on('board_update', ({ board, turn }) => {\r\n      setBoard(board);\r\n      setTurn(turn);\r\n    });\r\n\r\n    socket.on('game_over', ({ winner }) => {\r\n      setGameOver(true);\r\n      setWinner(winner);\r\n    });\r\n\r\n    socket.on('player_left', () => {\r\n      alert('Opponent left the room. Game over.');\r\n      setGameOver(true);\r\n      setWinner(null);\r\n      setBoard(Array(9).fill(null));\r\n      setPlayers([]);\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n      setPlayers([]);\r\n      setBoard(Array(9).fill(null));\r\n      setGameOver(false);\r\n      setWinner(null);\r\n    };\r\n  }, [roomId, username]);\r\n\r\n  const makeMove = (index) => {\r\n    if (gameOver || board[index] !== null) return;\r\n\r\n    const player = players.find(p => p.username === username);\r\n    if (!player) return;\r\n\r\n    if (turn !== player.symbol) return; // Not this player's turn\r\n\r\n    socket.emit('make_move', { roomId, index });\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', padding: 20, gap: 40 }}>\r\n      <div>\r\n        <h2>Room: {roomId}</h2>\r\n        <h3>Players:</h3>\r\n        <ul>\r\n          {players.map(p => (\r\n            <li key={p.username}>\r\n              {p.username} ({p.symbol})\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <Board board={board} onCellClick={makeMove} />\r\n        {gameOver && (\r\n          <h3>\r\n            {winner\r\n              ? `Game Over! Winner: ${winner}`\r\n              : 'Game Over! It\\'s a draw!'}\r\n          </h3>\r\n        )}\r\n        {!gameOver && <h4>Turn: {turn}</h4>}\r\n      </div>\r\n\r\n      <Chat roomId={roomId} username={username} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}